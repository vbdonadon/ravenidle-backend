generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  nickname   String   @unique
  created_at DateTime @default(now())

  @@map("account")
}

model Characters {
  id         String   @id @unique @default(uuid())
  name       String
  level      Int      @default(1)
  created_at DateTime @default(now())

  character_attributes CharacterAttributes[]
  character_status     CharacterStatus[]
  character_archetypes CharacterArchetypes[]

  @@map("characters")
}

model CharacterArchetypes {
  id             String @id @unique @default(uuid())
  archetype_name String @unique

  id_character String
  character    Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)

  id_archetype String
  archetypes   Archetypes @relation(fields: [id_archetype], references: [id], onDelete: Cascade)

  @@map("character_archetypes")
}

model CharacterAttributes {
  id              String @id @unique @default(uuid())
  attribute_name  String @unique
  attribute_value Int    @default(0)

  id_character String
  character    Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)

  id_attributes String
  attributes    Attributes @relation(fields: [id_attributes], references: [id], onDelete: Cascade)

  @@map("characters_attributes")
}

model CharacterStatus {
  id           String @id @unique @default(uuid())
  status_name  String @unique
  status_value Int    @default(0)

  id_character String
  character    Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)

  id_status String
  status    Status @relation(fields: [id_status], references: [id], onDelete: Cascade)

  @@map("characters_status")
}

model Attributes {
  id          String @id @default(uuid())
  name        String @unique
  description String

  character_attributes CharacterAttributes[]

  @@map("attributes")
}

model Status {
  id   String @id @default(uuid())
  name String @unique

  character_status CharacterStatus[]

  @@map("status")
}

model Archetypes {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  skills               Skills[]
  character_archetypes CharacterArchetypes[]

  @@map("archetypes")
}

model Skills {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  type        String
  enabled     Boolean @default(false)

  id_archetype String
  archetypes   Archetypes @relation(fields: [id_archetype], references: [id])

  @@map("skills")
}
