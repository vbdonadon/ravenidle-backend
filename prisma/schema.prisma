generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  nickname   String   @unique

  @@map("account")
}

model Monsters {
  id         String   @id @unique @default(uuid())
  created_at DateTime @default(now())

  name     String @unique
  category String
  level    Int
  attack   Int
  defense  Int

  @@map("monsters")
}

model Characters {
  id                  String   @id @unique @default(uuid())
  name                String
  created_at          DateTime @default(now())
  level               Int      @default(1)
  attribute_points    Int      @default(0)
  skill_points        Int      @default(0)
  current_experience  Int      @default(0)
  required_experience Int      @default(0)

  character_archetypes CharacterArchetypes[]
  character_attributes CharacterAttributes[]
  character_status     CharacterStatus[]

  @@map("characters")
}

model CharacterArchetypes {
  id             String     @id @unique @default(uuid())
  archetype_name String     @unique
  id_character   String
  id_archetype   String
  archetypes     Archetypes @relation(fields: [id_archetype], references: [id], onDelete: Cascade)
  character      Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)

  @@map("character_archetypes")
}

model CharacterAttributes {
  id              String     @id @unique @default(uuid())
  attribute_name  String     @unique
  attribute_value Int        @default(0)
  id_character    String
  id_attributes   String
  attributes      Attributes @relation(fields: [id_attributes], references: [id], onDelete: Cascade)
  character       Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)

  @@map("characters_attributes")
}

model CharacterStatus {
  id           String     @id @unique @default(uuid())
  status_name  String     @unique
  status_value Decimal    @default(0)
  id_character String
  id_status    String
  character    Characters @relation(fields: [id_character], references: [id], onDelete: Cascade)
  status       Status     @relation(fields: [id_status], references: [id], onDelete: Cascade)

  @@map("characters_status")
}

model Experience {
  id       String @id @unique @default(uuid())
  level    Int
  required Int
}

model Attributes {
  id                   String                @id @default(uuid())
  name                 String                @unique
  description          String
  character_attributes CharacterAttributes[]

  @@map("attributes")
}

model Status {
  id               String            @id @default(uuid())
  name             String            @unique
  character_status CharacterStatus[]

  @@map("status")
}

model Archetypes {
  id                   String                @id @default(uuid())
  name                 String                @unique
  description          String?
  character_archetypes CharacterArchetypes[]
  skills               Skills[]

  @@map("archetypes")
}

model Skills {
  id           String     @id @default(uuid())
  name         String     @unique
  enabled      Boolean    @default(false)
  id_archetype String
  description  String?
  type         String
  archetypes   Archetypes @relation(fields: [id_archetype], references: [id])

  @@map("skills")
}
